{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CREATE_USER_SUCCESS, CREATE_USER_FAIL } from \"./types\";\nimport { firebase2, db, firestore } from \"../config/firebase\";\nexport var signUp = function signUp(name, email, password, password2) {\n  return function _callee(dispatch) {\n    var errorCode, errorMessage;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(password !== password2)) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Passwords don't match.\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(firebase2.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var data = {\n                id: uid,\n                email: email,\n                name: name\n              };\n              var usersRef = firestore.collection('profiles');\n              usersRef.doc(uid).set(data).then(function () {\n                console.log(response);\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            }));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            errorCode = _context.t0.code;\n            errorMessage = _context.t0.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n            dispatch({\n              type: CREATE_USER_FAIL\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n};\nexport var login = function login(email, password) {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(firebase2.auth().signInWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var usersRef = firestore.collection('profiles');\n              usersRef.doc(uid).get().then(function (firestoreDocument) {\n                if (!firestoreDocument.exists) {\n                  alert('User does not exist anymore.');\n                  return;\n                }\n\n                var user = firestoreDocument.data();\n                console.log('SUCCESS');\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            }));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/blood-bank/app/actions/Authentication.js"],"names":["CREATE_USER_SUCCESS","CREATE_USER_FAIL","firebase2","db","firestore","signUp","name","email","password","password2","dispatch","alert","auth","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","collection","doc","set","console","log","catch","error","errorCode","code","errorMessage","message","type","login","signInWithEmailAndPassword","get","firestoreDocument","exists"],"mappings":"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","sourcesContent":["import { CREATE_USER_SUCCESS, CREATE_USER_FAIL } from './types'\r\nimport { firebase2, db, firestore } from '../config/firebase'\r\n\r\n// import * as firebase from 'firebase'\r\n// import 'firebase/firestore'\r\n\r\nexport const signUp = (name, email, password, password2) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match.\")\r\n      return\r\n    }\r\n    await firebase2\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const data = {\r\n          id: uid,\r\n          email,\r\n          name,\r\n        }\r\n        const usersRef = firestore.collection('profiles')\r\n        usersRef\r\n          .doc(uid)\r\n          .set(data)\r\n          .then(() => {\r\n            // navigation.navigate('Home', { user: data })\r\n            console.log(response)\r\n          })\r\n          .catch((error) => {\r\n            alert(error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  } catch (error) {\r\n    var errorCode = error.code\r\n    var errorMessage = error.message\r\n    console.log(errorCode)\r\n    console.log(errorMessage)\r\n    dispatch({\r\n      type: CREATE_USER_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    await firebase2\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const usersRef = firestore.collection('profiles')\r\n        usersRef\r\n          .doc(uid)\r\n          .get()\r\n          .then((firestoreDocument) => {\r\n            if (!firestoreDocument.exists) {\r\n              alert('User does not exist anymore.')\r\n              return\r\n            }\r\n            const user = firestoreDocument.data()\r\n            console.log('SUCCESS')\r\n          })\r\n          .catch((error) => {\r\n            alert(error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}