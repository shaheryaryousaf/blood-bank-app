{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_FAIL, GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, GET_ALL_PROFILES_SUCCESS, GET_ALL_PROFILES_FAIL } from \"../actions/types\";\nvar initialState = {\n  profile: {},\n  profiles: []\n};\n\nvar Profile = function Profile() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_ALL_PROFILES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profiles: payload\n      });\n\n    case COMPLETE_PROFILE_SUCCESS:\n    case GET_PROFILE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        profile: payload\n      });\n\n    case COMPLETE_PROFILE_FAIL:\n    case GET_PROFILE_FAIL:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default Profile;","map":{"version":3,"sources":["H:/React/native/blood-bank/app/reducers/Profile.js"],"names":["COMPLETE_PROFILE_SUCCESS","COMPLETE_PROFILE_FAIL","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","GET_ALL_PROFILES_SUCCESS","GET_ALL_PROFILES_FAIL","initialState","profile","profiles","Profile","state","action","type","payload"],"mappings":";;;;;;AAAA,SACEA,wBADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,wBALF,EAMEC,qBANF;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACxCC,IADwC,GACtBD,MADsB,CACxCC,IADwC;AAAA,MAClCC,OADkC,GACtBF,MADsB,CAClCE,OADkC;;AAGhD,UAAQD,IAAR;AACE,SAAKR,wBAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,QAAQ,EAAEK;AAFZ;;AAIF,SAAKb,wBAAL;AACA,SAAKE,mBAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,OAAO,EAAEM;AAFX;;AAIF,SAAKZ,qBAAL;AACA,SAAKE,gBAAL;AACE,+BACKO,KADL;;AAGF;AACE,aAAOA,KAAP;AAlBJ;AAoBD,CAvBD;;AAwBA,eAAeD,OAAf","sourcesContent":["import {\r\n  COMPLETE_PROFILE_SUCCESS,\r\n  COMPLETE_PROFILE_FAIL,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  GET_ALL_PROFILES_SUCCESS,\r\n  GET_ALL_PROFILES_FAIL,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  profile: {},\r\n  profiles: [],\r\n}\r\n\r\nconst Profile = (state = initialState, action) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case GET_ALL_PROFILES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n      }\r\n    case COMPLETE_PROFILE_SUCCESS:\r\n    case GET_PROFILE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n      }\r\n    case COMPLETE_PROFILE_FAIL:\r\n    case GET_PROFILE_FAIL:\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default Profile\r\n"]},"metadata":{},"sourceType":"module"}