{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_FAIL, GET_PROFILE_SUCCESS, GET_PROFILE_FAIL, GET_ALL_PROFILES_SUCCESS, GET_ALL_PROFILES_FAIL } from \"./types\";\nimport { firestore } from \"../config/firebase\";\nexport var completeProfile = function completeProfile(data) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firestore.collection('profiles').doc(data.id).update({\n                phone: data.phone,\n                age: data.age,\n                blood_group: data.blood_group,\n                address: data.address,\n                city: data.city,\n                bio: data.bio\n              });\n              dispatch({\n                type: COMPLETE_PROFILE_SUCCESS,\n                payload: res\n              });\n            } catch (err) {\n              dispatch({\n                type: COMPLETE_PROFILE_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getAllProfiles = function getAllProfiles() {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            try {\n              firestore.collection('profiles').get().then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                  console.log(doc.id, ' => ', doc.data());\n                });\n              });\n            } catch (error) {}\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\nexport var getProfile = function getProfile(data) {\n  return function _callee3(dispatch) {\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            try {\n              firestore.collection('profiles').doc(data).get().then(function (doc) {\n                if (doc.exists) {\n                  dispatch({\n                    type: GET_PROFILE_SUCCESS,\n                    payload: doc.data()\n                  });\n                } else {\n                  dispatch({\n                    type: GET_PROFILE_FAIL\n                  });\n                }\n              }).catch(function (error) {\n                console.log('Error getting document:', error);\n              });\n            } catch (err) {\n              dispatch({\n                type: GET_PROFILE_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/blood-bank/app/actions/Profile.js"],"names":["COMPLETE_PROFILE_SUCCESS","COMPLETE_PROFILE_FAIL","GET_PROFILE_SUCCESS","GET_PROFILE_FAIL","GET_ALL_PROFILES_SUCCESS","GET_ALL_PROFILES_FAIL","firestore","completeProfile","data","dispatch","collection","doc","id","update","phone","age","blood_group","address","city","bio","type","payload","res","err","getAllProfiles","get","then","querySnapshot","forEach","console","log","error","getProfile","exists","catch"],"mappings":";AAAA,SACEA,wBADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,gBAJF,EAKEC,wBALF,EAMEC,qBANF;AAQA,SAASC,SAAT;AAKA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACvC,gBAAI;AACFH,cAAAA,SAAS,CAACI,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCH,IAAI,CAACI,EAA1C,EAA8CC,MAA9C,CAAqD;AACnDC,gBAAAA,KAAK,EAAEN,IAAI,CAACM,KADuC;AAEnDC,gBAAAA,GAAG,EAAEP,IAAI,CAACO,GAFyC;AAGnDC,gBAAAA,WAAW,EAAER,IAAI,CAACQ,WAHiC;AAInDC,gBAAAA,OAAO,EAAET,IAAI,CAACS,OAJqC;AAKnDC,gBAAAA,IAAI,EAAEV,IAAI,CAACU,IALwC;AAMnDC,gBAAAA,GAAG,EAAEX,IAAI,CAACW;AANyC,eAArD;AAQAV,cAAAA,QAAQ,CAAC;AACPW,gBAAAA,IAAI,EAAEpB,wBADC;AAEPqB,gBAAAA,OAAO,EAAEC;AAFF,eAAD,CAAR;AAID,aAbD,CAaE,OAAOC,GAAP,EAAY;AACZd,cAAAA,QAAQ,CAAC;AACPW,gBAAAA,IAAI,EAAEnB;AADC,eAAD,CAAR;AAGD;;AAlBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAxB;AAwBP,OAAO,IAAMuB,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,kBAAOf,QAAP;AAAA;AAAA;AAAA;AAAA;AAClC,gBAAI;AACFH,cAAAA,SAAS,CACNI,UADH,CACc,UADd,EAEGe,GAFH,GAGGC,IAHH,CAGQ,UAAUC,aAAV,EAAyB;AAC7BA,gBAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUjB,GAAV,EAAe;AAEnCkB,kBAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAG,CAACC,EAAhB,EAAoB,MAApB,EAA4BD,GAAG,CAACH,IAAJ,EAA5B;AACD,iBAHD;AAID,eARH;AASD,aAVD,CAUE,OAAOuB,KAAP,EAAc,CAAE;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAvB;AAiBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACxB,IAAD;AAAA,SAAU,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAClC,gBAAI;AACFH,cAAAA,SAAS,CACNI,UADH,CACc,UADd,EAEGC,GAFH,CAEOH,IAFP,EAGGiB,GAHH,GAIGC,IAJH,CAIQ,UAAUf,GAAV,EAAe;AACnB,oBAAIA,GAAG,CAACsB,MAAR,EAAgB;AACdxB,kBAAAA,QAAQ,CAAC;AACPW,oBAAAA,IAAI,EAAElB,mBADC;AAEPmB,oBAAAA,OAAO,EAAEV,GAAG,CAACH,IAAJ;AAFF,mBAAD,CAAR;AAID,iBALD,MAKO;AACLC,kBAAAA,QAAQ,CAAC;AACPW,oBAAAA,IAAI,EAAEjB;AADC,mBAAD,CAAR;AAGD;AACF,eAfH,EAgBG+B,KAhBH,CAgBS,UAAUH,KAAV,EAAiB;AACtBF,gBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCC,KAAvC;AACD,eAlBH;AAmBD,aApBD,CAoBE,OAAOR,GAAP,EAAY;AACZd,cAAAA,QAAQ,CAAC;AACPW,gBAAAA,IAAI,EAAEjB;AADC,eAAD,CAAR;AAGD;;AAzBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAnB","sourcesContent":["import {\r\n  COMPLETE_PROFILE_SUCCESS,\r\n  COMPLETE_PROFILE_FAIL,\r\n  GET_PROFILE_SUCCESS,\r\n  GET_PROFILE_FAIL,\r\n  GET_ALL_PROFILES_SUCCESS,\r\n  GET_ALL_PROFILES_FAIL,\r\n} from './types'\r\nimport { firestore } from '../config/firebase'\r\n\r\n/* ============================== */\r\n/* CREATE NEW USER PROFILE */\r\n/* ============================== */\r\nexport const completeProfile = (data) => async (dispatch) => {\r\n  try {\r\n    firestore.collection('profiles').doc(data.id).update({\r\n      phone: data.phone,\r\n      age: data.age,\r\n      blood_group: data.blood_group,\r\n      address: data.address,\r\n      city: data.city,\r\n      bio: data.bio,\r\n    })\r\n    dispatch({\r\n      type: COMPLETE_PROFILE_SUCCESS,\r\n      payload: res,\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: COMPLETE_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\n/* ============================== */\r\n/* GET ALL PROFILES */\r\n/* ============================== */\r\nexport const getAllProfiles = () => async (dispatch) => {\r\n  try {\r\n    firestore\r\n      .collection('profiles')\r\n      .get()\r\n      .then(function (querySnapshot) {\r\n        querySnapshot.forEach(function (doc) {\r\n          // doc.data() is never undefined for query doc snapshots\r\n          console.log(doc.id, ' => ', doc.data())\r\n        })\r\n      })\r\n  } catch (error) {}\r\n}\r\n\r\n/* ============================== */\r\n/* GET USER PROFILE */\r\n/* ============================== */\r\nexport const getProfile = (data) => async (dispatch) => {\r\n  try {\r\n    firestore\r\n      .collection('profiles')\r\n      .doc(data)\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          dispatch({\r\n            type: GET_PROFILE_SUCCESS,\r\n            payload: doc.data(),\r\n          })\r\n        } else {\r\n          dispatch({\r\n            type: GET_PROFILE_FAIL,\r\n          })\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log('Error getting document:', error)\r\n      })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}