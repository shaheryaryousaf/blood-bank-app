{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CREATE_USER_SUCCESS, CREATE_USER_FAIL } from \"./types\";\nimport { auth, firebase2, db, firestore } from \"../config/firebase\";\nexport var signUp = function signUp(name, email, password, password2) {\n  return function _callee(dispatch) {\n    var errorCode, errorMessage;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(password !== password2)) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Passwords don't match.\");\n            return _context.abrupt(\"return\");\n\n          case 4:\n            firebase2.auth().createUserWithEmailAndPassword(email, password).then(function (response) {\n              var uid = response.user.uid;\n              var data = {\n                id: uid,\n                email: email,\n                name: name\n              };\n              var usersRef = firestore.collection('profiles');\n              usersRef.doc(uid).set(data).then(function () {\n                console.log(response);\n              }).catch(function (error) {\n                alert(error);\n              });\n            }).catch(function (error) {\n              alert(error);\n            });\n            _context.next = 14;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            errorCode = _context.t0.code;\n            errorMessage = _context.t0.message;\n            console.log(errorCode);\n            console.log(errorMessage);\n            dispatch({\n              type: CREATE_USER_FAIL\n            });\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/blood-bank/app/actions/Authentication.js"],"names":["CREATE_USER_SUCCESS","CREATE_USER_FAIL","auth","firebase2","db","firestore","signUp","name","email","password","password2","dispatch","alert","createUserWithEmailAndPassword","then","response","uid","user","data","id","usersRef","collection","doc","set","console","log","catch","error","errorCode","code","errorMessage","message","type"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,gBAA9B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,EAA1B,EAA8BC,SAA9B;AAKA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,EAAwBC,SAAxB;AAAA,SAAsC,iBAC1DC,QAD0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAIpDF,QAAQ,KAAKC,SAJuC;AAAA;AAAA;AAAA;;AAKtDE,YAAAA,KAAK,CAAC,wBAAD,CAAL;AALsD;;AAAA;AAQxDT,YAAAA,SAAS,CACND,IADH,GAEGW,8BAFH,CAEkCL,KAFlC,EAEyCC,QAFzC,EAGGK,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,kBAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAT,CAAcD,GAA1B;AACA,kBAAME,IAAI,GAAG;AACXC,gBAAAA,EAAE,EAAEH,GADO;AAEXR,gBAAAA,KAAK,EAALA,KAFW;AAGXD,gBAAAA,IAAI,EAAJA;AAHW,eAAb;AAKA,kBAAMa,QAAQ,GAAGf,SAAS,CAACgB,UAAV,CAAqB,UAArB,CAAjB;AACAD,cAAAA,QAAQ,CACLE,GADH,CACON,GADP,EAEGO,GAFH,CAEOL,IAFP,EAGGJ,IAHH,CAGQ,YAAM;AAEVU,gBAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,eANH,EAOGW,KAPH,CAOS,UAACC,KAAD,EAAW;AAChBf,gBAAAA,KAAK,CAACe,KAAD,CAAL;AACD,eATH;AAUD,aArBH,EAsBGD,KAtBH,CAsBS,UAACC,KAAD,EAAW;AAChBf,cAAAA,KAAK,CAACe,KAAD,CAAL;AACD,aAxBH;AARwD;AAAA;;AAAA;AAAA;AAAA;AAkCpDC,YAAAA,SAlCoD,GAkCxC,YAAMC,IAlCkC;AAmCpDC,YAAAA,YAnCoD,GAmCrC,YAAMC,OAnC+B;AAoCxDP,YAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACAnB,YAAAA,QAAQ,CAAC;AACPqB,cAAAA,IAAI,EAAE/B;AADC,aAAD,CAAR;;AAtCwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;AAAA,CAAf","sourcesContent":["import { CREATE_USER_SUCCESS, CREATE_USER_FAIL } from './types'\r\nimport { auth, firebase2, db, firestore } from '../config/firebase'\r\n\r\n// import * as firebase from 'firebase'\r\n// import 'firebase/firestore'\r\n\r\nexport const signUp = (name, email, password, password2) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match.\")\r\n      return\r\n    }\r\n    firebase2\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        const uid = response.user.uid\r\n        const data = {\r\n          id: uid,\r\n          email,\r\n          name,\r\n        }\r\n        const usersRef = firestore.collection('profiles')\r\n        usersRef\r\n          .doc(uid)\r\n          .set(data)\r\n          .then(() => {\r\n            // navigation.navigate('Home', { user: data })\r\n            console.log(response)\r\n          })\r\n          .catch((error) => {\r\n            alert(error)\r\n          })\r\n      })\r\n      .catch((error) => {\r\n        alert(error)\r\n      })\r\n  } catch (error) {\r\n    var errorCode = error.code\r\n    var errorMessage = error.message\r\n    console.log(errorCode)\r\n    console.log(errorMessage)\r\n    dispatch({\r\n      type: CREATE_USER_FAIL,\r\n    })\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}