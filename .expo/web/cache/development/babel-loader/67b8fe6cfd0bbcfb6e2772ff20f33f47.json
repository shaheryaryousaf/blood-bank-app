{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SUBMIT_SUCCESS, SUBMIT_FAIL, GET_POSTS_SUCCESS, GET_POSTS_FAIL, GET_SINGLE_SUCCESS, GET_SINGLE_FAIL } from \"../actions/types\";\nvar initialState = {\n  posts: [],\n  post: {}\n};\n\nvar Post = function Post() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case GET_POSTS_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: payload\n      });\n\n    case GET_SINGLE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        post: payload\n      });\n\n    case SUBMIT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        posts: [payload].concat(_toConsumableArray(state.posts))\n      });\n\n    case GET_POSTS_FAIL:\n    case SUBMIT_FAIL:\n    case GET_SINGLE_FAIL:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n};\n\nexport default Post;","map":{"version":3,"sources":["H:/React/native/blood-bank/app/reducers/Post.js"],"names":["SUBMIT_SUCCESS","SUBMIT_FAIL","GET_POSTS_SUCCESS","GET_POSTS_FAIL","GET_SINGLE_SUCCESS","GET_SINGLE_FAIL","initialState","posts","post","Post","state","action","type","payload"],"mappings":";;;;;;;AAAA,SACEA,cADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,kBALF,EAMEC,eANF;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;AAAA,MACrCC,IADqC,GACnBD,MADmB,CACrCC,IADqC;AAAA,MAC/BC,OAD+B,GACnBF,MADmB,CAC/BE,OAD+B;;AAG7C,UAAQD,IAAR;AACE,SAAKV,iBAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,KAAK,EAAEM;AAFT;;AAIF,SAAKT,kBAAL;AACE,6CACKM,KADL;AAEEF,QAAAA,IAAI,EAAEK;AAFR;;AAIF,SAAKb,cAAL;AACE,6CACKU,KADL;AAEEH,QAAAA,KAAK,GAAGM,OAAH,4BAAeH,KAAK,CAACH,KAArB;AAFP;;AAIF,SAAKJ,cAAL;AACA,SAAKF,WAAL;AACA,SAAKI,eAAL;AACE,+BACKK,KADL;;AAGF;AACE,aAAOA,KAAP;AAvBJ;AAyBD,CA5BD;;AA6BA,eAAeD,IAAf","sourcesContent":["import {\r\n  SUBMIT_SUCCESS,\r\n  SUBMIT_FAIL,\r\n  GET_POSTS_SUCCESS,\r\n  GET_POSTS_FAIL,\r\n  GET_SINGLE_SUCCESS,\r\n  GET_SINGLE_FAIL,\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: {},\r\n}\r\n\r\nconst Post = (state = initialState, action) => {\r\n  const { type, payload } = action\r\n\r\n  switch (type) {\r\n    case GET_POSTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: payload,\r\n      }\r\n    case GET_SINGLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        post: payload,\r\n      }\r\n    case SUBMIT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        posts: [payload, ...state.posts],\r\n      }\r\n    case GET_POSTS_FAIL:\r\n    case SUBMIT_FAIL:\r\n    case GET_SINGLE_FAIL:\r\n      return {\r\n        ...state,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}