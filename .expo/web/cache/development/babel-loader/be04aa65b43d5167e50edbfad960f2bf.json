{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"H:\\\\React\\\\native\\\\blood-bank\\\\app\\\\screens\\\\CompleteProfileScreen.js\";\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Screen from \"../components/Screen\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nimport colors from \"../config/colors\";\nimport { connect } from 'react-redux';\nimport { completeProfile, getProfile } from \"../actions/Profile\";\nimport * as yup from 'yup';\nvar validationSchema = yup.object().shape({\n  phone: yup.string().required().label('Phone')\n});\n\nvar CompleteProfileScreen = function CompleteProfileScreen(_ref) {\n  var completeProfile = _ref.completeProfile,\n      user = _ref.user,\n      navigation = _ref.navigation,\n      getProfile = _ref.getProfile,\n      profile = _ref.profile;\n  useEffect(function () {\n    getProfile(user.uid);\n  }, [user.uid]);\n  var initialValues = {\n    id: user && user.uid,\n    phone: '',\n    age: '',\n    blood_group: '',\n    address: '',\n    city: '',\n    bio: ''\n  };\n  return React.createElement(Screen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, React.createElement(AppForm, {\n    initialValues: initialValues,\n    onSubmit: function onSubmit(values) {\n      completeProfile(values);\n      navigation.navigate('Profile_Page');\n    },\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, React.createElement(AppFormField, {\n    placeholder: \"Phone\",\n    name: \"phone\",\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"uid\",\n    name: \"uid\",\n    value: user.uid,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Age\",\n    name: \"age\",\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Blood Group\",\n    name: \"blood_group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Address\",\n    name: \"address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"City\",\n    name: \"city\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Bio\",\n    name: \"bio\",\n    multiline: true,\n    numberOfLines: 5,\n    style: {\n      minHeight: 200,\n      textAlignVertical: 'top',\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Complete Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    width: '100%',\n    marginVertical: 15,\n    paddingRight: 25,\n    paddingLeft: 25\n  },\n  select: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: colors.medium,\n    borderRadius: 10,\n    marginVertical: 5\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.Authentication.user,\n    profile: state.Profile.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  completeProfile: completeProfile,\n  getProfile: getProfile\n})(CompleteProfileScreen);","map":{"version":3,"sources":["H:/React/native/blood-bank/app/screens/CompleteProfileScreen.js"],"names":["React","useEffect","Screen","AppForm","AppFormField","SubmitButton","colors","connect","completeProfile","getProfile","yup","validationSchema","object","shape","phone","string","required","label","CompleteProfileScreen","user","navigation","profile","uid","initialValues","id","age","blood_group","address","city","bio","values","navigate","styles","form","minHeight","textAlignVertical","justifyContent","StyleSheet","create","width","marginVertical","paddingRight","paddingLeft","select","borderWidth","borderColor","medium","borderRadius","mapStateToProps","state","Authentication","Profile"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { View, ScrollView, StyleSheet } from 'react-native'\r\n\r\nimport Screen from '../components/Screen'\r\nimport { AppForm, AppFormField, SubmitButton } from '../components/forms'\r\n\r\nimport colors from '../config/colors'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { completeProfile, getProfile } from '../actions/Profile'\r\n\r\nimport * as yup from 'yup'\r\nconst validationSchema = yup.object().shape({\r\n  phone: yup.string().required().label('Phone'),\r\n})\r\n\r\nconst CompleteProfileScreen = ({ completeProfile, user, navigation, getProfile, profile }) => {\r\n\r\n  useEffect(() => {\r\n    getProfile(user.uid)\r\n  }, [user.uid])\r\n\r\n  const initialValues = {\r\n    id: user && user.uid,\r\n    phone: '',\r\n    age: '',\r\n    blood_group: '',\r\n    address: '',\r\n    city: '',\r\n    bio: '',\r\n  }\r\n  return (\r\n    <Screen>\r\n      <ScrollView>\r\n        <AppForm\r\n          initialValues={initialValues}\r\n          onSubmit={(values) => {\r\n            completeProfile(values)\r\n            navigation.navigate('Profile_Page')\r\n          }}\r\n          validationSchema={validationSchema}\r\n        >\r\n          <View style={styles.form}>\r\n            <AppFormField\r\n              placeholder='Phone'\r\n              name='phone'\r\n              keyboardType='numeric'\r\n            />\r\n            <AppFormField placeholder='uid' name='uid' value={user.uid} />\r\n            <AppFormField placeholder='Age' name='age' keyboardType='numeric' />\r\n            <AppFormField placeholder='Blood Group' name='blood_group' />\r\n            <AppFormField placeholder='Address' name='address' />\r\n            <AppFormField placeholder='City' name='city' />\r\n            <AppFormField\r\n              placeholder='Bio'\r\n              name='bio'\r\n              multiline={true}\r\n              numberOfLines={5}\r\n              style={{\r\n                minHeight: 200,\r\n                textAlignVertical: 'top',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            />\r\n\r\n            <SubmitButton title='Complete Profile' />\r\n          </View>\r\n        </AppForm>\r\n      </ScrollView>\r\n    </Screen>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  form: {\r\n    width: '100%',\r\n    marginVertical: 15,\r\n    paddingRight: 25,\r\n    paddingLeft: 25,\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: colors.medium,\r\n    borderRadius: 10,\r\n    marginVertical: 5,\r\n  },\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.Authentication.user,\r\n  profile: state.Profile.profile\r\n})\r\n\r\nexport default connect(mapStateToProps, { completeProfile, getProfile })(\r\n  CompleteProfileScreen\r\n)\r\n"]},"metadata":{},"sourceType":"module"}