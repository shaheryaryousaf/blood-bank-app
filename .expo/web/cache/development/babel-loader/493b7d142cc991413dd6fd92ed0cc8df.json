{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"H:\\\\React\\\\native\\\\blood-bank\\\\app\\\\screens\\\\CompleteProfileScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Picker } from '@react-native-community/picker';\nimport Screen from \"../components/Screen\";\nimport { AppForm, AppFormField, SubmitButton } from \"../components/forms\";\nimport colors from \"../config/colors\";\nimport * as yup from 'yup';\nvar validationSchema = yup.object().shape({\n  email: yup.string().email().required().label('Email'),\n  password: yup.string().required().min(6).label('Password')\n});\n\nvar CompleteProfileScreen = function CompleteProfileScreen() {\n  var _useState = useState('A+'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedBloodType = _useState2[0],\n      setSelectedBloodType = _useState2[1];\n\n  return React.createElement(Screen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(AppForm, {\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: function onSubmit(values) {\n      return console.log(values);\n    },\n    validationSchema: validationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, React.createElement(AppFormField, {\n    placeholder: \"Phone\",\n    name: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Age\",\n    name: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.select,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedBloodType,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedBloodType(itemValue);\n    },\n    style: {\n      width: '100%',\n      height: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Select blood group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"A+\",\n    value: \"a+\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"A-\",\n    value: \"a-\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"B+\",\n    value: \"b+\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"B-\",\n    value: \"b-\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"O+\",\n    value: \"o+\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"O-\",\n    value: \"o-\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"AB+\",\n    value: \"ab+\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"AB-\",\n    value: \"ab-\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))), React.createElement(AppFormField, {\n    placeholder: \"Address\",\n    name: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"City\",\n    name: \"password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(AppFormField, {\n    placeholder: \"Bio\",\n    name: \"password\",\n    multiline: true,\n    numberOfLines: 5,\n    style: {\n      minHeight: 200,\n      textAlignVertical: 'top',\n      justifyContent: 'flex-start'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Complete Profile\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })))));\n};\n\nvar styles = StyleSheet.create({\n  form: {\n    width: '100%',\n    marginVertical: 15,\n    paddingRight: 25,\n    paddingLeft: 25\n  },\n  select: {\n    width: '100%',\n    borderWidth: 1,\n    borderColor: colors.medium,\n    borderRadius: 10,\n    marginVertical: 5\n  }\n});\nexport default CompleteProfileScreen;","map":{"version":3,"sources":["H:/React/native/blood-bank/app/screens/CompleteProfileScreen.js"],"names":["React","useState","Picker","Screen","AppForm","AppFormField","SubmitButton","colors","yup","validationSchema","object","shape","email","string","required","label","password","min","CompleteProfileScreen","selectedBloodType","setSelectedBloodType","values","console","log","styles","form","select","itemValue","itemIndex","width","height","minHeight","textAlignVertical","justifyContent","StyleSheet","create","marginVertical","paddingRight","paddingLeft","borderWidth","borderColor","medium","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, ScrollView, StyleSheet } from 'react-native'\r\nimport { Picker } from '@react-native-community/picker'\r\n\r\nimport Screen from '../components/Screen'\r\nimport { AppForm, AppFormField, SubmitButton } from '../components/forms'\r\n\r\nimport colors from '../config/colors'\r\n\r\nimport * as yup from 'yup'\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().email().required().label('Email'),\r\n  password: yup.string().required().min(6).label('Password'),\r\n})\r\n\r\nconst CompleteProfileScreen = () => {\r\n  const [selectedBloodType, setSelectedBloodType] = useState('A+')\r\n  return (\r\n    <Screen>\r\n      <ScrollView>\r\n        <AppForm\r\n          initialValues={{ email: '', password: '' }}\r\n          onSubmit={(values) => console.log(values)}\r\n          validationSchema={validationSchema}\r\n        >\r\n          <View style={styles.form}>\r\n            <AppFormField placeholder='Phone' name='email' />\r\n            <AppFormField placeholder='Age' name='password' />\r\n            <View style={styles.select}>\r\n              <Picker\r\n                selectedValue={selectedBloodType}\r\n                onValueChange={(itemValue, itemIndex) =>\r\n                  setSelectedBloodType(itemValue)\r\n                }\r\n                style={{ width: '100%', height: 50 }}\r\n              >\r\n                <Picker.Item label='Select blood group' />\r\n                <Picker.Item label='A+' value='a+' />\r\n                <Picker.Item label='A-' value='a-' />\r\n                <Picker.Item label='B+' value='b+' />\r\n                <Picker.Item label='B-' value='b-' />\r\n                <Picker.Item label='O+' value='o+' />\r\n                <Picker.Item label='O-' value='o-' />\r\n                <Picker.Item label='AB+' value='ab+' />\r\n                <Picker.Item label='AB-' value='ab-' />\r\n              </Picker>\r\n            </View>\r\n            <AppFormField placeholder='Address' name='password' />\r\n            <AppFormField placeholder='City' name='password' />\r\n            <AppFormField\r\n              placeholder='Bio'\r\n              name='password'\r\n              multiline={true}\r\n              numberOfLines={5}\r\n              style={{\r\n                minHeight: 200,\r\n                textAlignVertical: 'top',\r\n                justifyContent: 'flex-start',\r\n              }}\r\n            />\r\n\r\n            <SubmitButton title='Complete Profile' />\r\n          </View>\r\n        </AppForm>\r\n      </ScrollView>\r\n    </Screen>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  form: {\r\n    width: '100%',\r\n    marginVertical: 15,\r\n    paddingRight: 25,\r\n    paddingLeft: 25,\r\n  },\r\n  select: {\r\n    width: '100%',\r\n    borderWidth: 1,\r\n    borderColor: colors.medium,\r\n    borderRadius: 10,\r\n    marginVertical: 5,\r\n  },\r\n})\r\n\r\nexport default CompleteProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}