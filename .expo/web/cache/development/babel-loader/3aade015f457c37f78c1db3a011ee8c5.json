{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_FAIL } from \"./types\";\nimport { firebase2, db, firestore } from \"../config/firebase\";\nexport var completeProfile = function completeProfile(data) {\n  return function _callee(dispatch) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firestore.collection('profiles').doc(data.id).update({\n                phone: data.phone,\n                age: data.age,\n                blood_group: data.blood_group,\n                address: data.address,\n                city: data.city,\n                bio: data.bio\n              });\n              console.log(data);\n              dispatch({\n                type: COMPLETE_PROFILE_SUCCESS,\n                payload: res\n              });\n            } catch (err) {\n              dispatch({\n                type: COMPLETE_PROFILE_FAIL\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["H:/React/native/blood-bank/app/actions/Profile.js"],"names":["COMPLETE_PROFILE_SUCCESS","COMPLETE_PROFILE_FAIL","firebase2","db","firestore","completeProfile","data","dispatch","collection","doc","id","update","phone","age","blood_group","address","city","bio","console","log","type","payload","res","err"],"mappings":";AAAA,SAASA,wBAAT,EAAmCC,qBAAnC;AACA,SAASC,SAAT,EAAoBC,EAApB,EAAwBC,SAAxB;AAKA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD;AAAA,SAAU,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACvC,gBAAI;AACFH,cAAAA,SAAS,CAACI,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,CAAqCH,IAAI,CAACI,EAA1C,EAA8CC,MAA9C,CAAqD;AACnDC,gBAAAA,KAAK,EAAEN,IAAI,CAACM,KADuC;AAEnDC,gBAAAA,GAAG,EAAEP,IAAI,CAACO,GAFyC;AAGnDC,gBAAAA,WAAW,EAAER,IAAI,CAACQ,WAHiC;AAInDC,gBAAAA,OAAO,EAAET,IAAI,CAACS,OAJqC;AAKnDC,gBAAAA,IAAI,EAAEV,IAAI,CAACU,IALwC;AAMnDC,gBAAAA,GAAG,EAAEX,IAAI,CAACW;AANyC,eAArD;AAQAC,cAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAC,cAAAA,QAAQ,CAAC;AACPa,gBAAAA,IAAI,EAAEpB,wBADC;AAEPqB,gBAAAA,OAAO,EAAEC;AAFF,eAAD,CAAR;AAID,aAdD,CAcE,OAAOC,GAAP,EAAY;AACZhB,cAAAA,QAAQ,CAAC;AACPa,gBAAAA,IAAI,EAAEnB;AADC,eAAD,CAAR;AAGD;;AAnBsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAV;AAAA,CAAxB","sourcesContent":["import { COMPLETE_PROFILE_SUCCESS, COMPLETE_PROFILE_FAIL } from './types'\r\nimport { firebase2, db, firestore } from '../config/firebase'\r\n\r\n/* ============================== */\r\n/* CREATE NEW USER PROFILE */\r\n/* ============================== */\r\nexport const completeProfile = (data) => async (dispatch) => {\r\n  try {\r\n    firestore.collection('profiles').doc(data.id).update({\r\n      phone: data.phone,\r\n      age: data.age,\r\n      blood_group: data.blood_group,\r\n      address: data.address,\r\n      city: data.city,\r\n      bio: data.bio,\r\n    })\r\n    console.log(data)\r\n    dispatch({\r\n      type: COMPLETE_PROFILE_SUCCESS,\r\n      payload: res,\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: COMPLETE_PROFILE_FAIL,\r\n    })\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}